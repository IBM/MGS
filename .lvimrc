"" Set indentation rule "
"set tabstop=4
"set softtabstop=4
"set shiftwidth=4
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab

"" Notify user if lines too long"
set colorcolumn=110
highlight ColorColumn ctermbg=darkgray

"" Vim search path (when we press 'gf')"
:set path+=$NTSROOT/common/include,$NTSROOT/gsl/utils/std/include,$NTSROOT/gsl/framework/dca/include,$NTSROOT/mdl/include,$NTSROOT/gsl/framework/simulation/include,$NTSROOT/gsl/framework/parser/include,$NTSROOT/gsl/framework/factories/include,$NTSROOT/gsl/framework/networks/include,$NTSROOT/gsl/framework/dataitems/include,$NTSROOT/nti/include,

" add ** to 'path' to enable recursive search
" using :find myfile.txt
set path+=**

" Build command by pressing F4 key
" NOTE: ! sign tell vim not jumping to the location of first error found
"nnoremap <F4> :make!<CR>
"

" ctags
:set tags=$NTSROOT/tags

au BufNewFile,BufRead *.di setlocal ft=d
au BufNewFile,BufRead *.gsl setlocal ft=gsl foldmethod=marker
au BufNewFile,BufRead *.mdl setlocal ft=mdl foldmethod=marker
au BufNewFile,BufRead NTSMacros.h setlocal foldmethod=marker
au BufNewFile,BufRead *.par setlocal foldmethod=marker
au BufNewFile,BufRead make_nts setlocal foldmethod=marker
au BufNewFile,BufRead build_gsl setlocal foldmethod=marker
"noremap <leader>f <Esc>:syn region myFold start="/*{{{*/" end="/*}}}*/" transparent fold<CR>
noremap <leader>f <Esc>:syn region myFold start="{{{" end="}}}" transparent fold<CR>
"" all consecutive comments (starting with a space and //)
"" will be folded"
"syn match comment "\v(^\s*//.*\n)+" fold<CR>

"YouCompleteMe
"let vimDir = "$NTSROOT"
"let g:ycm_global_ycm_extra_conf = expand(vimDir . ".ycm_extra_conf.py")
