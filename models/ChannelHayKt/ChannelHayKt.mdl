#ifndef ChannelHayKt_MDL
#define ChannelHayKt_MDL

#include "../std/std.mdl"
#include "../HodgkinHuxley/HodgkinHuxley.mdl"
#include "../BranchSolver/BranchSolver.mdl"

Node ChannelHayKt Implements ConductanceArrayProducer, ReversalPotentialArrayProducer, BranchDataProducer {
  dyn_var_t [] m;
  dyn_var_t [] h;
  dyn_var_t [] g;
  dyn_var_t [] gbar;

  dyn_var_t []* V;
	
  BranchDataStruct* branchData; 

  Shared {
    dyn_var_t* K_IC;
    dyn_var_t* K_EC;
    dyn_var_t* deltaT;
    dyn_var_t* T;
    dyn_var_t [] E_K;
    InitPhase computeE;
  }

  RuntimePhase update;
  InitPhase initialize;

  ConductanceArrayProducer.conductanceArray << &g;
  ReversalPotentialArrayProducer.reversalPotentials << &Shared.E_K;
  BranchDataProducer.branchData << branchData;

  InAttrPSet {
    string identifier;
    int idx;
  }

  Connection Pre Node (PSet.identifier=="compartment[Voltage]") Expects VoltageArrayProducer, BranchDataProducer {
    VoltageArrayProducer.voltageArray >> V;
    BranchDataProducer.branchData >> branchData;
  }

  Connection Pre Node (PSet.identifier=="IC[Voltage]") Expects KConcentrationProducer {
    KConcentrationProducer.K >> Shared.K_IC;
  }

  Connection Pre Constant (PSet.identifier=="EC") 
    Expects KConcentrationProducer, TemperatureProducer {
    KConcentrationProducer.K >> Shared.K_EC;
    TemperatureProducer.T >> Shared.T;
  }

  Connection Pre Constant (PSet.identifier=="dt") Expects TimeStepProducer {
    TimeStepProducer.deltaT >> Shared.deltaT;
  }
}

#endif
