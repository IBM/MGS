#ifndef NMDAReceptor_MDL
#define NMDAReceptor_MDL

#include "../../nti/include/MaxComputeOrder.h"
#include "../std/std.mdl"
#include "../HodgkinHuxley/HodgkinHuxley.mdl"
#include "../BranchSolver/BranchSolver.mdl"

Node NMDAReceptor Implements ConductanceProducer, MaximumConductanceProducer, ReversalPotentialProducer, CaCurrentProducer, BranchDataArrayProducer, IndexArrayProducer, WeightProducer {
  dyn_var_t g;
  dyn_var_t gbar;
  dyn_var_t gbar0;
  dyn_var_t w;
  dyn_var_t buffer;
  dyn_var_t r;
  dyn_var_t I_Ca;
  dyn_var_t E_Ca;
  dyn_var_t tp;

  dyn_var_t* Vpre;
  dyn_var_t []* Vpost;
  dyn_var_t []* Ca_IC;
  int indexPost;
  int* [] indexPrePost;

  BranchDataStruct* [] branchDataPrePost;

  Shared {
    dyn_var_t alpha;
    dyn_var_t beta;
    dyn_var_t Tmax;
    dyn_var_t Vp;
    dyn_var_t Kp;
    dyn_var_t E;

    dyn_var_t* deltaT;
    dyn_var_t* T;
    dyn_var_t* Ca_EC;
    dyn_var_t* Mg_EC;
    dyn_var_t* Ketamine;

    //Plasticity params
    int plasticityOn;
    int plasticityStartAt;
    int plasticityStopAt;
    dyn_var_t theta_d;
    dyn_var_t theta_p;
    dyn_var_t gamma_d;
    dyn_var_t gamma_p;
    dyn_var_t tau;
    dyn_var_t w_th;

    //Meta-plasticity NMDAR
    dyn_var_t deltaNMDAR;
    dyn_var_t alphaBuffer;
    dyn_var_t tauBuffer;
   }

  RuntimePhase updateNMDA;
  RuntimePhase updateNMDADepPlasticity;
  InitPhase initializeNMDA;

  ConductanceProducer.conductance << &g;
  MaximumConductanceProducer.maximumConductance << &w;
  ReversalPotentialProducer.reversalPotential << &Shared.E;
  CaCurrentProducer.CaCurrent << &I_Ca;
  BranchDataArrayProducer.branchDataArray << &branchDataPrePost;
  IndexArrayProducer.indexArray << &indexPrePost;
  WeightProducer.w << &w; //Repeated in MaxConductanceProducer?

  InAttrPSet {
    string identifier;
    int idx;
  }

  UserFunction setPostIndex;

  Connection Pre Node (PSet.identifier=="preSynapticPoint") Expects VoltageProducer, BranchDataProducer, IndexProducer {
    VoltageProducer.voltage >> Vpre;
    BranchDataProducer.branchData >> branchDataPrePost;
    IndexProducer.index >> indexPrePost;
  }

  Connection Pre Node (PSet.identifier=="compartment[Voltage]") Expects VoltageArrayProducer, BranchDataProducer {
    VoltageArrayProducer.voltageArray >> Vpost;
    BranchDataProducer.branchData >> branchDataPrePost;
    setPostIndex();
  }

  Connection Pre Node (PSet.identifier=="IC[Calcium]") Expects CaConcentrationArrayProducer {
    CaConcentrationArrayProducer.CaConcentrations >> Ca_IC;
  }

  Connection Pre Constant (PSet.identifier=="EC") Expects CaConcentrationProducer, MgConcentrationProducer, TemperatureProducer, KetamineProducer {
    CaConcentrationProducer.Ca >> Shared.Ca_EC;
    MgConcentrationProducer.Mg >> Shared.Mg_EC;
    TemperatureProducer.T >> Shared.T;
    KetamineProducer.Ketamine >> Shared.Ketamine;
  }

  Connection Pre Constant (PSet.identifier=="dt") Expects TimeStepProducer {
    TimeStepProducer.deltaT >> Shared.deltaT;
  }

}

#endif
