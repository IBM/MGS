// =================================================================
// Licensed Materials - Property of IBM
//
// "Restricted Materials of IBM"
//
// BCM-YKT-07-18-2017
//
// (C) Copyright IBM Corp. 2005-2017  All rights reserved
//
// US Government Users Restricted Rights -
// Use, duplication or disclosure restricted by
// GSA ADP Schedule Contract with IBM Corp.
//
// =================================================================

#ifndef CLEFTASTROCYTEIAFUNIT_MDL
#define CLEFTASTROCYTEIAFUNIT_MDL
#include "../PointNeuronTools/PointNeuronTools.mdl"

Node CleftAstrocyteIAFUnit Implements NeurotransmitterIAFProducer, ECBIAFProducer
{
  int neurotransmitterType;                          // type of neurotransmitter
  
  NeurotransmitterIAFInput [] neurotransmitterInput; // input of spike
  double neurotransmitter;                           // current neurotransmitter concentration
  ECBIAFInput [] ECBInput;                           // input of ECB
  double ECB;                                        // current endogenous cannabinoids concentration
  
  Shared
    {
      double [] neurotransmitterDecayTau; // neurotransmitter decay tau

      double deltaT;                   // in s
    }

  InAttrPSet
    {
      string identifier;
      double weight;                   // potentially for structural plasticity
    }

  InitPhase initialize();
  RuntimePhase update(neurotransmitter, ECB);

  NeurotransmitterIAFProducer.neurotransmitter << &neurotransmitter; // neurotransmitter output
  ECBIAFProducer.ECB << &ECB; // endogenous cannabinoids output

  UserFunction setNeurotransmitterIndices;
  UserFunction setECBIndices;  

  Connection Pre Node (PSet.identifier=="neurotransmitterInput") Expects NeurotransmitterIAFProducer    
  {
    NeurotransmitterIAFProducer.neurotransmitter >> neurotransmitterInput.neurotransmitter;
    PSet.weight >> neurotransmitterInput.weight;
  }

  Connection Pre Node (PSet.identifier=="ECBinput") Expects ECBIAFProducer
  {
    ECBIAFProducer.ECB >> ECBInput.ECB;
    PSet.weight >> ECBInput.weight;
  }  
}

#endif
