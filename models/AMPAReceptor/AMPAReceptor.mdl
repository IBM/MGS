#ifndef AMPAReceptor_MDL
#define AMPAReceptor_MDL

#include "../std/std.mdl"
#include "../HodgkinHuxley/HodgkinHuxley.mdl"
#include "../BranchSolver/BranchSolver.mdl"

Node AMPAReceptor Implements ConductanceProducer, MaximumConductanceProducer, ReversalPotentialProducer, BranchDataArrayProducer, IndexArrayProducer {
  float g;
  float gbar;
  float r;

  float* V;
  float* w;
  int indexPost;
  int* [] indexPrePost;
 
  BranchDataStruct* [] branchDataPrePost;

  Shared {
    float* deltaT;
    float E;
    float alpha;
    float beta;
    float Tmax;
    float Vp;
    float Kp;
   }

  RuntimePhase updateAMPA;
  InitPhase initializeAMPA;

  ConductanceProducer.conductance << &g;
  MaximumConductanceProducer.maximumConductance << &gbar;
  ReversalPotentialProducer.reversalPotential << &Shared.E;
  BranchDataArrayProducer.branchDataArray << &branchDataPrePost;
  IndexArrayProducer.indexArray << &indexPrePost;

  InAttrPSet {
    string identifier;
    int idx;
  }

  UserFunction setPostIndex;

  Connection Pre Node (PSet.identifier=="preSynapticPoint") Expects VoltageProducer, BranchDataProducer, IndexProducer {
    VoltageProducer.voltage >> V;
    BranchDataProducer.branchData >> branchDataPrePost;
    IndexProducer.index >> indexPrePost;
  }

  Connection Pre Node (PSet.identifier=="compartment[Voltage]") Expects VoltageArrayProducer, BranchDataProducer {
    BranchDataProducer.branchData >> branchDataPrePost;
    setPostIndex();
  }

  Connection Pre Node (PSet.identifier=="receptor") Expects WeightProducer {
    WeightProducer.w >> w;
  }

  Connection Pre Constant (PSet.identifier=="dt") Expects TimeStepProducer {
    TimeStepProducer.deltaT >> Shared.deltaT;
  }
}

#endif
