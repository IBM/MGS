#ifndef LaboratoryTools_MDL
#define LaboratoryTools_MDL

#include "../std/std.mdl"
#include "../BranchSolver/BranchSolver.mdl"
#include "../HodgkinHuxley/HodgkinHuxley.mdl"

Struct TissueSite {
	dyn_var_t x;
	dyn_var_t y;
	dyn_var_t z;
	dyn_var_t r;
}

Variable VoltageClamp Implements CurrentProducer
{
//{{{
	dyn_var_t command; 						// Declare command voltage
	dyn_var_t Igen;							// Declare the feedback current applied to hold voltage constant
	dyn_var_t [] waveform;						// Declare an array for the waveform
	int waveformIdx;						// Declare index of the waveform array
	dyn_var_t Vprev;							// Declare voltage from previous iteration for calculating dV
	dyn_var_t Cm;							// Declare membrane capacitance
	dyn_var_t []* V; // array of pointers for the voltage measured at the cell that is input to the tool
	dyn_var_t beta;
	dyn_var_t* surfaceArea;
	int idx;
	dyn_var_t* deltaT;
	bool isOn;
	string fileName; 

	TriggeredFunction startWaveform;	  			// Define the trigger for the waveform or
	TriggeredFunction setCommand;					// a single command like a step
	TriggeredFunction toggle;

	InitPhase initialize;
	RuntimePhase updateI;
	FinalPhase finalize;

	CurrentProducer.current << &Igen;	// Describes the output of the function which is the current Igen

	InAttrPSet {
		string identifier;
	}

	Connection Pre Node (PSet.identifier=="BRANCH") Expects VoltageArrayProducer, ConnectionSurfaceAreaProducer {		// 
		VoltageArrayProducer.voltageArray >> V;
		ConnectionSurfaceAreaProducer.surfaceArea >> surfaceArea;
	}
	Connection Pre Node (PSet.identifier=="JUNCTION") Expects VoltageArrayProducer, SurfaceAreaProducer {		// 
		VoltageArrayProducer.voltageArray >> V;
		SurfaceAreaProducer.surfaceArea >> surfaceArea;
	}
	Connection Pre Constant () Expects TimeStepProducer {
		TimeStepProducer.deltaT >> deltaT;
	}
//}}}
}

Variable PointCurrentSource Implements CurrentProducer
{
//{{{
	dyn_var_t I;
	TriggeredFunction setCurrent;
	RuntimePhase stimulate(I);
	CurrentProducer.current << &I;
//}}}
}

Variable PointCalciumSource Implements CaCurrentProducer
{
//{{{
	dyn_var_t I_Ca;
	TriggeredFunction setCaCurrent;
	RuntimePhase stimulate(I_Ca);
	CaCurrentProducer.current << &I_Ca;
//}}}
}

Variable CurrentPulseGenerator Implements CurrentProducer
{
//{{{
	dyn_var_t I; // [pA]
	dyn_var_t peak;
	dyn_var_t period;
	dyn_var_t duration;
	dyn_var_t delay;
	dyn_var_t last;
	dyn_var_t inc;
	string pattern;

	dyn_var_t* deltaT;

	InitPhase initialize(I);
	RuntimePhase update(I);

	CurrentProducer.current << &I;
	Connection Pre Constant () Expects TimeStepProducer {
		TimeStepProducer.deltaT >> deltaT;
	}
//}}}
}

// GOAL: it connects to 1 or more Voltage producer compartment/channel/...
//    so one connection is an element in the array []V;
//          that reference to the real data 'dyn_var_t []*'
//   each Voltage is written to one column in the file, in the order it is connected 
//   the first column is always the time
// FORMAT:
//  time  V1  V2 V3 ....
Variable VoltageDisplay
{
//{{{
  //{{{ Data
	string fileName;
	int [] [] indices;// each element keeps track of (from a given ComputeBranch)
                    // the vector of indices of the compartments on that 
                    // data 'V' below is need to be recorded
	dyn_var_t []* []  V;// each element is a reference to 
                   // a vector of data to record on 1 ComputeBranch
	dyn_var_t []* V_connect;

	DimensionStruct* []* [] dimensions;
	DimensionStruct* []* dimensions_connect;

	BranchDataStruct* [] branchData;
	BranchDataStruct* branchData_connect;

	dyn_var_t* deltaT;
  //}}}

  //{{{ Methods
	InitPhase initialize;
	FinalPhase finalize;
	TriggeredFunction dataCollection;
  //}}}

	InAttrPSet {
		TissueSite site;
	}

	UserFunction setUpPointers;

	Connection Pre Node () Expects VoltageArrayProducer, BranchDataProducer, DimensionArrayProducer {// NOTE: each node represents data associated with compartments in 1 ComputeBranch
		VoltageArrayProducer.voltageArray >> V_connect; 
		DimensionArrayProducer.dimensionArray >> dimensions_connect;
		BranchDataProducer.branchData >> branchData_connect;
		setUpPointers();
	}
	Connection Pre Constant () Expects TimeStepProducer {
		TimeStepProducer.deltaT >> deltaT;
	}
//}}}
} 

Variable CalciumDisplay
{
//{{{
	string fileName;
	int [] [] indices;

	dyn_var_t []* []  Ca;
	dyn_var_t []* Ca_connect;

	DimensionStruct* []* [] dimensions;
	DimensionStruct* []* dimensions_connect;

	BranchDataStruct* [] branchData;
	BranchDataStruct* branchData_connect;

	dyn_var_t* deltaT;

	InitPhase initialize;
	FinalPhase finalize;
	TriggeredFunction dataCollection;

	InAttrPSet {
		string identifier;
		TissueSite site;
	}

	UserFunction setUpPointers;

	Connection Pre Node () Expects CaConcentrationArrayProducer, BranchDataProducer, DimensionArrayProducer {
		CaConcentrationArrayProducer.CaConcentrations >> Ca_connect;
		DimensionArrayProducer.dimensionArray >> dimensions_connect;
		BranchDataProducer.branchData >> branchData_connect;
		setUpPointers();
	}
	Connection Pre Constant () Expects TimeStepProducer {
		TimeStepProducer.deltaT >> deltaT;
	}
//}}}
} 

Variable ConductanceDisplay
{
//{{{
	string fileName;
	int [] indices;

	dyn_var_t []* [] g_channel;
	dyn_var_t []* g_channelConnect;
	BranchDataStruct* [] channelBranchData;

	dyn_var_t* [] g_synapse;
	BranchDataStruct* []* [] synapseBranchData;
	BranchDataStruct* []* synapseBranchDataConnect;
	int* [] [] synapseIndices;
	int* [] synapseIndicesConnect;

	dyn_var_t* deltaT;

	InitPhase initialize;
	FinalPhase finalize;
	TriggeredFunction dataCollection;

	InAttrPSet {
		string identifier;
		string type;
	}

	UserFunction setUpPointers;

	Connection Pre Node (PSet.identifier=="CHANNEL") Expects ConductanceArrayProducer, BranchDataProducer {
		ConductanceArrayProducer.conductanceArray >> g_channelConnect;
		BranchDataProducer.branchData >> channelBranchData;
		setUpPointers();
	}
	Connection Pre Node ((PSet.identifier=="SYNAPSE") && (PSet.type=="g")) Expects ConductanceProducer, BranchDataArrayProducer, IndexArrayProducer {
		ConductanceProducer.conductance >> g_synapse;
		BranchDataArrayProducer.branchDataArray >> synapseBranchDataConnect;
		IndexArrayProducer.indexArray >> synapseIndicesConnect;
		setUpPointers();
	}
	Connection Pre Node ((PSet.identifier=="SYNAPSE") && (PSet.type=="gbar")) Expects MaximumConductanceProducer, BranchDataArrayProducer, IndexArrayProducer {
		MaximumConductanceProducer.maximumConductance >> g_synapse;
		BranchDataArrayProducer.branchDataArray >> synapseBranchDataConnect;
		IndexArrayProducer.indexArray >> synapseIndicesConnect;
		setUpPointers();
	}
	Connection Pre Constant () Expects TimeStepProducer {
		TimeStepProducer.deltaT >> deltaT;
	}
//}}}
} 

Variable CurrentDisplay
{
//{{{
	string fileName;
	int [] indices;

	dyn_var_t []* [] I_channel;
	dyn_var_t []* I_channelConnect;
	BranchDataStruct* [] channelBranchData;

	dyn_var_t* [] I_synapse;
	BranchDataStruct* []* [] synapseBranchData;
	BranchDataStruct* []* synapseBranchDataConnect;
	int* [] [] synapseIndices;
	int* [] synapseIndicesConnect;

	BranchDataStruct* [] connexonBranchData;
	int* [] connexonIndices;

	dyn_var_t* deltaT;

	InitPhase initialize;
	FinalPhase finalize;
	TriggeredFunction dataCollection;

	InAttrPSet {
		string identifier;
	}

	UserFunction setUpPointers;

	Connection Pre Node (PSet.identifier=="CHANNEL") Expects CurrentArrayProducer, BranchDataProducer {
		CurrentArrayProducer.currents >> I_channelConnect;
		BranchDataProducer.branchData >> channelBranchData;
		setUpPointers();
	}
	Connection Pre Node (PSet.identifier=="SYNAPSE") Expects CurrentProducer, BranchDataArrayProducer, IndexArrayProducer {
		CurrentProducer.current >> I_synapse;
		BranchDataArrayProducer.branchDataArray >> synapseBranchDataConnect;
		IndexArrayProducer.indexArray >> synapseIndicesConnect;
		setUpPointers();
	}
	Connection Pre Node (PSet.identifier=="CONNEXON") Expects CurrentProducer, BranchDataProducer, IndexProducer {
		CurrentProducer.current >> I_synapse;
		BranchDataProducer.branchData >> connexonBranchData;
		IndexProducer.index >> connexonIndices;
	}
	Connection Pre Constant () Expects TimeStepProducer {
		TimeStepProducer.deltaT >> deltaT;
	}
//}}}
} 

Variable CaCurrentDisplay
{
//{{{
	string fileName;
	int [] indices;

	dyn_var_t []* [] ICa_channel;
	dyn_var_t []* ICa_channelConnect;
	BranchDataStruct* [] channelBranchData;

	dyn_var_t* [] ICa_synapse;
	BranchDataStruct* []* [] synapseBranchData;
	BranchDataStruct* []* synapseBranchDataConnect;
	int* [] [] synapseIndices;
	int* [] synapseIndicesConnect;

	BranchDataStruct* [] connexonBranchData;
	int* [] connexonIndices;

	dyn_var_t* deltaT;

	InitPhase initialize;
	FinalPhase finalize;
	TriggeredFunction dataCollection;

	InAttrPSet {
		string identifier;
	}

	UserFunction setUpPointers;

	Connection Pre Node (PSet.identifier=="CHANNEL") Expects CaCurrentArrayProducer, BranchDataProducer {
		CaCurrentArrayProducer.currents >> ICa_channelConnect;
		BranchDataProducer.branchData >> channelBranchData;
		setUpPointers();
	}
	Connection Pre Node (PSet.identifier=="SYNAPSE") Expects CaCurrentProducer, BranchDataArrayProducer, IndexArrayProducer {
		CaCurrentProducer.current >> ICa_synapse;
		BranchDataArrayProducer.branchDataArray >> synapseBranchDataConnect;
		IndexArrayProducer.indexArray >> synapseIndicesConnect;
		setUpPointers();
	}
	Connection Pre Node (PSet.identifier=="CONNEXON") Expects CaCurrentProducer, BranchDataProducer, IndexProducer {
		CaCurrentProducer.current >> ICa_synapse;
		BranchDataProducer.branchData >> connexonBranchData;
		IndexProducer.index >> connexonIndices;
	}
	Connection Pre Constant () Expects TimeStepProducer {
		TimeStepProducer.deltaT >> deltaT;
	}
//}}}
} 

Variable ReversalPotentialDisplay
{
//{{{
	string fileName;
	int [] indices;

	dyn_var_t []* [] E_channel;
	dyn_var_t []* E_channelConnect;
	BranchDataStruct* [] channelBranchData;

	dyn_var_t* [] E_synapse;
	BranchDataStruct* []* [] synapseBranchData;
	BranchDataStruct* []* synapseBranchDataConnect;
	int* [] [] synapseIndices;
	int* [] synapseIndicesConnect;

	dyn_var_t* deltaT;

	InitPhase initialize;
	FinalPhase finalize;
	TriggeredFunction dataCollection;

	InAttrPSet {
		string identifier;
	}

	UserFunction setUpPointers;

	Connection Pre Node (PSet.identifier=="CHANNEL") Expects ReversalPotentialArrayProducer, BranchDataProducer {
		ReversalPotentialArrayProducer.reversalPotentials >> E_channelConnect;
		BranchDataProducer.branchData >> channelBranchData;
		setUpPointers();
	}
	Connection Pre Node (PSet.identifier=="SYNAPSE") Expects ReversalPotentialProducer, BranchDataArrayProducer, IndexArrayProducer {
		ReversalPotentialProducer.reversalPotential >> E_synapse;
		BranchDataArrayProducer.branchDataArray >> synapseBranchDataConnect;
		IndexArrayProducer.indexArray >> synapseIndicesConnect;
		setUpPointers();
	}
	Connection Pre Constant () Expects TimeStepProducer {
		TimeStepProducer.deltaT >> deltaT;
	}
//}}}
} 

Variable CalciumVisualization
{
//{{{
	string inFileName;
	string outFileName;
	int [] indices;

	bool offline;
	long dataSize;
	long collectionCount;

	dyn_var_t []* []  Ca;
	dyn_var_t []* Ca_connect;
	BranchDataStruct* [] branchData;

	dyn_var_t* deltaT;

	InitPhase initialize;
	FinalPhase finalize;
	TriggeredFunction dataCollection;

	UserFunction setUpPointers;

	Connection Pre Node () Expects CaConcentrationArrayProducer, BranchDataProducer {
		CaConcentrationArrayProducer.CaConcentrations >> Ca_connect;
		BranchDataProducer.branchData >> branchData;
		setUpPointers();
	}
	Connection Pre Constant () Expects TimeStepProducer {
		TimeStepProducer.deltaT >> deltaT;
	}
//}}}
} 

Variable VoltageVisualization
{
//{{{
	string inFileName;
	string outFileName;
	int [] indices;

	bool offline;
	long dataSize;
	long collectionCount;

	dyn_var_t []* []  V;
	dyn_var_t []* V_connect;
	BranchDataStruct* [] branchData;

	dyn_var_t* deltaT;

	InitPhase initialize;
	FinalPhase finalize;
	TriggeredFunction dataCollection;

	UserFunction setUpPointers;

	Connection Pre Node () Expects VoltageArrayProducer, BranchDataProducer {
		VoltageArrayProducer.voltageArray >> V_connect;
		BranchDataProducer.branchData >> branchData;
		setUpPointers();
	}
	Connection Pre Constant () Expects TimeStepProducer {
		TimeStepProducer.deltaT >> deltaT;
	}
//}}}
} 

Variable SimulationSetter Implements PlasticityToggleProducer
{
//{{{
	int plasticityToggle;

	InitPhase initialize;
	RuntimePhase propagateToggles(plasticityToggle);
	TriggeredFunction switchPlasticityOnOff;

	PlasticityToggleProducer.plasticityToggle << &plasticityToggle;
//}}}
} 

Variable SimulationInfo 
{
  //NOTE: make sure it has to be 'float'
  // to be able to absorved by FloatTrigger
  float currentTime;    //[ms]
  float recordIntervalInTime; //[ms]
  int recordIntervalInIterations; 

	dyn_var_t* deltaT;

	InitPhase initialize;
  RuntimePhase calculateInfo; //estimate the current time

	Connection Pre Constant () Expects TimeStepProducer {
		TimeStepProducer.deltaT >> deltaT;
	}
 
}

#endif
