// =================================================================
// Licensed Materials - Property of IBM
//
// "Restricted Materials of IBM"
//
// BCM-YKT-07-18-2017
//
// (C) Copyright IBM Corp. 2005-2017  All rights reserved
//
// US Government Users Restricted Rights -
// Use, duplication or disclosure restricted by
// GSA ADP Schedule Contract with IBM Corp.
//
// =================================================================

#ifndef LIFENODE_MDL
#define LIFENODE_MDL
#include "../PointNeuronTools/PointNeuronTools.mdl"

//{{{
//Node LifeNode Implements ValueProducer{
//   int value;
//   int publicValue;
//   int* [] neighbors;
//
//   Shared {
//     int tooSparse;
//     int tooCrowded;
//     int actionType;
//	   int complexity;
//   }
//
//   InitPhase initialize();
//   RuntimePhase update();
//   RuntimePhase updateWeight();
//   RuntimePhase copy(publicValue);
//
//   ValueProducer.value << &publicValue;
//   
//
//   Connection Pre Node () Expects ValueProducer {
//      ValueProducer.value >> neighbors;
//   }
//}
//}}}
Node LifeNode Implements ValueProducer, FloatProducer {
   //{{{internal data 
   int value;
   int publicValue;
   float weight;
   float publicWeight;
   //}}}
   int* [] neighbors;
   float* [] neighborsWeight;

   Shared {
     //{{{
     int tooSparse;
     int tooCrowded;
     int actionType;
     int complexity;
     //}}}
   }

   InitPhase initialize();
   RuntimePhase update();
   RuntimePhase updateWeight();
   RuntimePhase copy(publicValue, publicWeight);
   //values passed to here will be marshalled-demarshalled 
   // if the two neighbors are on different memory spaces

   ValueProducer.value << &publicValue;
   FloatProducer.value << &publicWeight;
   

   Connection Pre Node () Expects ValueProducer, FloatProducer {
      ValueProducer.value >> neighbors;
      FloatProducer.value >> neighborsWeight;
   }
}
#endif
